package rob.ors.core.model.impl;

import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;

import rob.ors.core.model.api.ElementAge;

/**
 * Set generated by hbm2java
 */
public abstract class OutfitI implements java.io.Serializable, rob.ors.core.model.api.Outfit, ElementAge {

	protected Integer id;
	protected Integer likes;
	protected Integer views;
	private Date date;
	private Integer age;
	
	public OutfitI()
	{	
		this.likes = new Integer(0);
		this.views = new Integer(0);
		this.date = new Date();
		age = 360;
	}

	
	@Override
	public Integer getId()
	{
		return this.id;
	}

	@Override
	public void setId(Integer id)
	{		
		this.id = id;
	}

	@Override
	public Integer getLikes()
	{
		return this.likes;
	}

	
	@Override
	public void setLikes(Integer likes)
	{
		this.likes = likes;
	}


	@Override
	public Integer getViews()
	{
		return this.views;
	}

	
	@Override
	public void setViews(Integer views)
	{
		this.views = views;
	}

	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}


	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		OutfitI other = (OutfitI) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	public Date getDate()
	{
		return date;
	}


	public void setDate(Date newDate)
	{
		this.date = newDate;		
	}


	public boolean isOlder(int days)
	{
		Calendar cal = new GregorianCalendar();
		cal.setTime((Date) date.clone());
		cal.add(Calendar.DAY_OF_YEAR, days);
		if(cal.compareTo(new GregorianCalendar())<0) return true;
		return false;
	}
	
	
	@Override
	public Integer getAge() {
		return this.age;
	}


	@Override
	public void setAge(Integer age) {
		this.age = age;
		
	}

	
	
}
