package rob.ors.core.model.impl;


// Generated Jul 13, 2012 11:58:30 AM by Hibernate Tools 3.4.0.CR1

import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import rob.ors.core.model.api.AbstractGarment;
import rob.ors.core.model.api.Category;
import rob.ors.core.model.api.ElementAge;
import rob.ors.core.model.api.Garment;

/**
 * AbstractGarment generated by hbm2java
 */
public abstract class GarmentI  implements java.io.Serializable, Garment, ElementAge {

	protected Integer id;
	protected Category category;
	protected Integer age;
	protected Integer views;
	protected Integer saves;
	protected Map<Integer,Integer> attributes;
	protected Date date;
	
	protected GarmentI()
	{
		attributes = new HashMap<Integer,Integer>(0);		
	}
	public GarmentI(Category category)
	{
		if(category == null) throw new IllegalArgumentException("Category is null");
		attributes = new HashMap<Integer,Integer>(0);
		this.category = category;		
		this.age=new Integer(365);
		this.views = new Integer(0);
		this.saves = new Integer(0);	
		this.date = new Date();
	}
	
	@Override
	public Integer getId()
	{		
		return id;
	}
	
	@Override
	public void setId(Integer id)
	{
		
		if(id == null) throw new IllegalArgumentException("Id is null");
		this.id = id;
	}
	
	@Override
	public Category getCategory()
	{		
		return category;
	}
	

	
	@Override
	public Integer getAge()
	{
		return age;
	}
	
	@Override
	public void setAge(Integer age)
	{
		this.age = age;
	}
	
	@Override
	public Integer getViews()
	{
		return views;
	}
	
	@Override
	public void setViews(Integer views)
	{
		this.views = views;
	}
	
	@Override
	public Integer getSaves()
	{
		return saves;
	}
	
	@Override
	public void setSaves(Integer saves)
	{
		this.saves = saves;
	}
	
	@Override
	public Map<Integer, Integer> getAttributes()
	{
		return attributes;
	}
	
	/**
	 * Can't be outfit public. Setting the attributes map will make hibernate crash, as it's actually a proxy to allow lazy initalization
	 * @param attributes
	 */
	private void setAttributes(Map<Integer, Integer> attributes)
	{
		this.attributes = attributes;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}
	
	

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		GarmentI other = (GarmentI) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}
	

	public Date getDate()
	{
		return date;
	}


	public void setDate(Date newDate)
	{
		this.date = newDate;		
	}


	public boolean isOlder(int days)
	{
		Calendar cal = new GregorianCalendar();
		cal.setTime((Date) date.clone());
		cal.add(Calendar.DAY_OF_YEAR, days);
		if(cal.compareTo(new GregorianCalendar())<0) return true;
		return false;
	}
	

	
	
}
